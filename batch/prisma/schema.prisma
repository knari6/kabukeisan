generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Companies {
  id                   Int                  @id @default(autoincrement())
  name                 String               @db.VarChar(255)
  code                 String               @unique @db.VarChar(5)
  financialStatements  FinancialStatements[]
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt
}

model FinancialStatements {
  id                   Int                  @id @default(autoincrement())
  companyId            Int
  year                 String               @db.VarChar(5)
  quarterType          QuarterType
  stockAmount          Int
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt
  company              Companies            @relation(fields: [companyId], references: [id])
  profitLossStatement  ProfitLossStatements?
  cashFlow             CashFlows?
  depreciation         Depreciations?
  debt                 Debts?

  @@index([companyId])
}

model ProfitLossStatements {
  id                   Int                  @id @default(autoincrement())
  statementId          Int                  @unique
  sale                 Decimal?             @db.Decimal(15, 2)
  netSale              Decimal?             @db.Decimal(15, 2)
  operatingIncome      Decimal?             @db.Decimal(15, 2)
  ordinaryIncome       Decimal?             @db.Decimal(15, 2)
  profitBeforeTax      Decimal?             @db.Decimal(15, 2)
  tax                  Decimal?             @db.Decimal(15, 2)
  profit               Decimal?             @db.Decimal(15, 2)
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt
  statement            FinancialStatements  @relation(fields: [statementId], references: [id])
}

model CashFlows {
  id                   Int                  @id @default(autoincrement())
  statementId          Int                  @unique
  operatingCf          Decimal?             @db.Decimal(15, 2)
  investingCf          Decimal?             @db.Decimal(15, 2)
  financialCf          Decimal?             @db.Decimal(15, 2)
  dividendPaid         Decimal?             @db.Decimal(15, 2)
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt
  statement            FinancialStatements  @relation(fields: [statementId], references: [id])
}

model Depreciations {
  id                      Int                  @id @default(autoincrement())
  statementId             Int                  @unique
  depreciation            Decimal?             @db.Decimal(15, 2)
  amortization            Decimal?             @db.Decimal(15, 2)
  depreciationAmortization Decimal?            @db.Decimal(15, 2)
  capitalExpenditure      Decimal?             @db.Decimal(15, 2)
  researchAndDevelopment  Decimal?             @db.Decimal(15, 2)
  createdAt              DateTime             @default(now())
  updatedAt              DateTime             @updatedAt
  statement              FinancialStatements  @relation(fields: [statementId], references: [id])
}

model Debts {
  id                   Int                  @id @default(autoincrement())
  statementId          Int                  @unique
  interestBearingDebt  Decimal?             @db.Decimal(15, 2)
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt
  statement            FinancialStatements  @relation(fields: [statementId], references: [id])
}

enum QuarterType {
  Q1
  Q2
  Q3
  Q4
  FY
}